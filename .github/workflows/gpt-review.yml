name: Automated Code Review

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    name: GPT-4 Code Review
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Custom Code Review and Comment
        uses: actions/github-script@v6
        env:
          FILE_PATTERN: '*.cpp *.h *.txt *.md *.glsl *.yml *.json'
          CUSTOM_PROMPT: 'Please review the code from the following code diff:'
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          script: |
            const { execSync } = require('child_process');

            const prNumber = context.payload.pull_request.number;
            const filePattern = process.env.FILE_PATTERN;
            const customPrompt = process.env.CUSTOM_PROMPT;

            // Fetch diff based on the file pattern
            const diff = execSync(`git diff HEAD^ HEAD -- ${filePattern}`).toString();

            // Request GPT-4 review
            const payload = {
              model: 'gpt-4',
              max_tokens: 5000,
              messages: [
                {
                  role: 'user',
                  content: `${customPrompt} ${diff}`
                }
              ]
            };

            try {
              const response = await fetch('https://api.openai.com/v1/chat/completions', {
                method: 'POST',
                headers: {
                  'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify(payload)
              });

              if (response.ok) {
                const responseData = await response.json();
                const review = responseData.choices[0].text;
              
                // Create GitHub comment
                await github.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: review
                });
              } else {
                console.error('Failed to get review:', await response.text());
              }
            } catch (error) {
              console.error('An error occurred:', error);
            }
        
